<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>

    <!--There could be issues using this with TDS.  You can try uncommenting it and see if you have issues.
    This part isn't entirely necessary since we have implemented custom 'enforce version presence' 
    with ItemLanguageValidation in the httpRequestBegin-->
    <!--<databases>
      -->
    <!-- Custom GetItemCommand in order to support the "Enforcing of Version Presence" functionality -->
    <!--
      <database id="master" singleInstance="true" type="Sitecore.Data.Database, Sitecore.Kernel">
        <Engines.DataEngine.Commands.GetItemPrototype>
          <obj type="Sitecore.SharedSource.PartialLanguageFallback.DataEngine.GetItemCommand, Sitecore.SharedSource.PartialLanguageFallback" />
        </Engines.DataEngine.Commands.GetItemPrototype>
      </database>
      <database id="web" singleInstance="true" type="Sitecore.Data.Database, Sitecore.Kernel">
        <Engines.DataEngine.Commands.GetItemPrototype>
          <obj type="Sitecore.SharedSource.PartialLanguageFallback.DataEngine.GetItemCommand, Sitecore.SharedSource.PartialLanguageFallback" />
        </Engines.DataEngine.Commands.GetItemPrototype>
      </database>
    </databases>-->

    <pipelines>
      <renderContentEditor>
        <!--To allow [fallback value] to display near the field label, must include this patch -->
        <processor type="Sitecore.Shell.Applications.ContentEditor.Pipelines.RenderContentEditor.RenderSkinedContentEditor, Sitecore.Client">
          <patch:attribute name="type">Sitecore.SharedSource.PartialLanguageFallback.Pipelines.RenderContentEditor.CustomRenderSkinedContentEditor,Sitecore.SharedSource.PartialLanguageFallback</patch:attribute>
        </processor>
      </renderContentEditor>
      <httpRequestBegin>
        <!-- Custom pipeline processor that redirects to page not found in no item version for current language, 
        will perform some validation even if enforce version presence is not set to true, so that a blank page will never be loaded -->
        <!--Please note that something similar was added to prevent serving up items limited to certain countries that are not the current country in session, 
        this had to be added to the web.config, in 2 locations, <httpModules> and <system.webServer>  <modules>:
        <add type="Verndale.SharedSource.SitecoreProcessors.RegionValidationModule, Verndale.SharedSource" name="RegionValidationModule" />
        -->
        <processor patch:after="*[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" type="Verndale.SharedSource.SitecoreProcessors.ItemLanguageValidation, Verndale.SharedSource" />
        <!-- Custom pipeline processor that will set the .net culture based on the current sitecore context language -->
        <processor patch:after="*[@type='Verndale.SharedSource.SitecoreProcessors.ItemLanguageValidation, Verndale.SharedSource']" type="Verndale.SharedSource.SitecoreProcessors.CultureResolver, Verndale.SharedSource" />
      </httpRequestBegin>

      <getTranslation>
        <!-- Custom pipeline processor that will get the fallback language of the current language 
        and attempt to get the translation of that, as a final step in getTranslation -->
        <processor patch:after="*[@type='Sitecore.Pipelines.GetTranslation.TryGetFromCoreDatabase, Sitecore.Kernel']" type="Verndale.SharedSource.SitecoreProcessors.TryGetFromFallbackLanguage, Verndale.SharedSource" />
      </getTranslation>
    </pipelines>

    <events timingLevel="custom">
      <event name="item:created">
        <handler type=" Verndale.SharedSource.SitecoreProcessors.CreateVersionInAllLanguagesOnCreate, Verndale.SharedSource" method="OnItemCreated"/>
      </event>
    </events>

    <standardValues>
      <providers>
        <add name="sitecore">
          <patch:attribute name="type">Sitecore.SharedSource.PartialLanguageFallback.Providers.FallbackLanguageProvider,Sitecore.SharedSource.PartialLanguageFallback</patch:attribute>
          <!-- Pipe separated list of the databases that support the fallback 
               example: master|web
                ** REMOVE master IF ON A CD ENVIRONMENT!
          -->
          <SupportedDatabases>master|web</SupportedDatabases>
        </add>
      </providers>
    </standardValues>

    <sites>
      <site name="shell">
        <!--It seems that if it is not enabled on shell, it doesn't display [fallback value] next to label,
        FYI, View Standard fields also cannot be checked in order for [fallback value] to display, 
        since a different content editor renderer is used in that mode
        MUST also uncomment <renderContentEditor> above-->
        <patch:attribute name="enableFallback">true</patch:attribute>
      </site>

      <!--enforceVersionPresence: for use with GetItemCommand above, and Verndale.SharedSource.Helpers HasContextLanguage in Verndale.SharedSource-->
      <!--languageEmbedding: for use with Verndale.SharedSource.SitecoreProviders CustomLinkProvider in Verndale.SharedSource, always/never/asNeeded-->
      <site name="basedemo">
        <patch:attribute name="enableFallback">false</patch:attribute>
        <patch:attribute name="enforceVersionPresence">false</patch:attribute>
        <patch:attribute name="languageEmbedding">never</patch:attribute>
      </site>
      <site name="basesite">
        <patch:attribute name="enableFallback">false</patch:attribute>
        <patch:attribute name="enforceVersionPresence">false</patch:attribute>
        <patch:attribute name="languageEmbedding">never</patch:attribute>
      </site>
      <site name="website">
        <patch:attribute name="enableFallback">false</patch:attribute>
        <patch:attribute name="enforceVersionPresence">false</patch:attribute>
        <patch:attribute name="languageEmbedding">never</patch:attribute>
      </site>


      <!--DON'T DO THIS AT ALL, WITH THE ENFORCE VERSIONING SOLUTION VERNDALE IMPLEMENTED, DOING THIS IS UNNECESSARY-->
      <!-- When setting up "enforceVersionPresence" feature for the website above
           make sure to uncomment the following for "publisher" site as well-->

      <!--<site name="publisher">
        <patch:attribute name="enforceVersionPresence">false</patch:attribute>
      </site> -->
    </sites>

    <settings>
      <!--
            If enabled, the 'enable fallback' checkbox on the field definition item will be looked up
            in the SAME language version as the context language.
            If set to 'true', then when 'en-CA' tries to fallback to 'en', the checkbox field will be retrieved
            from the field definition item in 'en-CA', thus such version should exist.
            This feature enables you to have different fallback settings for the same field in different content languages
            If 'false', then the setting will be looked up from Fallback.MasterLanguage ('en' by default)
            Default value: false
         -->
      <setting name="Fallback.VaryFallbackSettingsPerLanguage" value="false" />

      <!--
            Pipe separated list of feild IDs that will be ignored during the fallback process 
            Example: {GUID}|{GUID}
            Default value: empty
         -->
      <setting name="Fallback.IgnoredFields" value="{C8F93AFE-BFD4-4E8F-9C61-152559854661}|{4C346442-E859-4EFD-89B2-44AEDF467D21}|{7EAD6FD6-6CF1-4ACA-AC6B-B200E7BAFE88}|{86FE4F77-4D9A-4EC3-9ED9-263D03BD1965}" />

      <!--
            Whether to process language fallback for the system fields that start with "__"
            Default value: false
         -->
      <setting name="Fallback.ProcessSystemFields" value="false" />

      <!--
            Pipe separated list of template GUIDs that support "Enforcing of Version Presence" functionality
            Default value: empty
         -->
      <!--Can use base templates here, recommend using the Base Web Page guid 
      or a base template just for specifying which templates enforce versioning-->
      <!--Base Page {AC308D59-4D53-477B-820E-C152066D096C}, Base Component {D35993E2-9D7C-405C-92EF-53DFA0DE8D62}
      Base Site Settings {036C96AD-54F3-499D-A78E-F1A3FD5725C4}, Base Folder {A1EB283E-2212-4A1C-B662-9AEE6942D1CA}-->
      <setting name="Fallback.EnforceVersionPresenceTemplates" value="{AC308D59-4D53-477B-820E-C152066D096C}|{D35993E2-9D7C-405C-92EF-53DFA0DE8D62}|{036C96AD-54F3-499D-A78E-F1A3FD5725C4}|{A1EB283E-2212-4A1C-B662-9AEE6942D1CA}" />

      <setting name="Fallback.CacheSize" value="10MB" />

      <!--
            Registered Sitecore language to be used for enforcing language fallback, i.e. 'master' language
            It is VERY important NOT to have this language to fallback to any other language on the item definition

            The value could be different depending on a locale. For US, that would be 'en' or 'en-US' for example
            If 'enforcing from master language' feature is enabled, this language will be used as a source language.

            Default value: en
         -->
      <!--This should match whatever language is the main language for templates in the content editor, so this should be 'en'.
      Changing this to something else would essentially tell it to look at that specified version (unless VaryFallbackSettingsPerLanguage is true)
      to check if the 'enable fallback' checkbox is true when deciding whether it should try to fallback or not-->
      <setting name="Fallback.MasterLanguage" value="en" />

      <!--comma delimited list of fields that should be used to check if an item is falling back in the Language Fallback Report Tool-->
      <setting name="Fallback.FieldToCheckForReporting" value="Headline,Sub Headline,Main Content,Teaser" />

      <!--Pipe delimited list of paths in the sitecore tree that specify the locations within which if an item is created, 
      it automatically add all language versions, if you do not want this functionality, leave it blank-->
      <setting name="Fallback.PathsToCheckForLanguageVersions" value="/sitecore/content/shared|/sitecore/content/website" />

      <!--By default, Media items are not versionable and the below setting is set to false in the web.config.  
        If you upload an image in one language, it will persist across all language versions.
        If you change this to true, then versioning will apply and you would have to set the media item into all language versions, 
        or enable fallback, but if enforce version presence is turned on and media template guids are included in EnforceVersionPresenceTemplates, 
        then you'll have to make sure all language versions at least exist-->
      <setting name="Media.UploadAsVersionableByDefault">
        <patch:attribute name="value">true</patch:attribute>
      </setting>

      <!--Affects how cross-site links are rendered when Rendering.SiteResolving is enabled.
            If true, the link provider will take the language attribute of the site definitions into consideration when resolving
            which site/hostname to use when rendering a cross-site link.
            However if you have more than one language valid for the same site, 
            it seems for some of those languages (that are not the default for that site) 
            to not be able to correctly identify the correct targetHostName-->
      <setting name="Rendering.SiteResolvingMatchCurrentLanguage">
        <patch:attribute name="value">false</patch:attribute>
      </setting>
    </settings>

    <commands>
      <command name="flp:setupfallback" type="Sitecore.SharedSource.PartialLanguageFallback.Commands.SetupFallbackCommand,Sitecore.SharedSource.PartialLanguageFallback" />
      <command name="item:addversiontoalllanguages" type="Verndale.SharedSource.SitecoreCommands.CreateVersionInAllLanguages,Verndale.SharedSource" />
    </commands>

    <!--This patches the documentBuilderType node that can be found in Sitecore.ContentSearch.Lucene.DefaultIndexConfiguration.config, 
    which is by default set to Sitecore.ContentSearch.LuceneProvider.LuceneDocumentBuilder, Sitecore.ContentSearch.LuceneProvider
    The update will take fallback into considering fo the current language version of the item has no value, using FallbackLanguageManager.ReadFallbackValue-->
    <contentSearch>
      <indexConfigurations>
        <defaultLuceneIndexConfiguration>
          <documentBuilderType>Verndale.SharedSource.SitecoreProviders.CustomLuceneDocumentBuilder, Verndale.SharedSource</documentBuilderType>
        </defaultLuceneIndexConfiguration>
	<defaultSolrIndexConfiguration>
          <documentBuilderType>Verndale.SharedSource.SitecoreProviders.CustomSolrDocumentBuilder, Verndale.SharedSource</documentBuilderType>
        </defaultSolrIndexConfiguration>
      </indexConfigurations>
    </contentSearch>
  </sitecore>

</configuration>

